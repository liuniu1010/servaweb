events {
    worker_connections 1024;
}

http {
    # Hide nginx version
    server_tokens off;

    # Include MIME types
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Global security headers (applied to all responses including errors)
    add_header X-Frame-Options "DENY" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;

    # Rate limiting zones
    limit_req_zone $binary_remote_addr zone=general_limit:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=job_limit:10m rate=5r/s;

    server {
        listen 443 ssl;
        server_name <rawdnsname>;

        client_max_body_size 100M;

        ssl_certificate     /etc/nginx/ssl/<fullchainfile>;
        ssl_certificate_key /etc/nginx/ssl/<privatekeyfile>;

        # Server-specific security headers
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;
        add_header Permissions-Policy "geolocation=(), microphone=(), camera=()" always;

        # Intercept backend error pages
        proxy_intercept_errors on;

        # Custom error pages
        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;

        location = /404.html {
            internal;
            add_header Content-Type text/plain;
            add_header X-Frame-Options "DENY" always;
            add_header X-Content-Type-Options "nosniff" always;
            add_header X-XSS-Protection "1; mode=block" always;
            return 404 "Page not found\n";
        }

        location = /50x.html {
            internal;
            add_header Content-Type text/plain;
            add_header X-Frame-Options "DENY" always;
            add_header X-Content-Type-Options "nosniff" always;
            add_header X-XSS-Protection "1; mode=block" always;
            return 500 "Server error\n";
        }

        # Block suspicious patterns
        location ~* \.(jsp|do)$ {
            return 404;
        }

        location ~* /(manager|host-manager|examples|docs)/ {
            return 404;
        }

        location / {
            # Rate limiting
            limit_req zone=general_limit burst=20 nodelay;

            proxy_pass http://<serverip>:8080;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_buffering off;
            proxy_connect_timeout 300s;
            proxy_send_timeout 300s;
            proxy_read_timeout 300s;
            send_timeout 300s;

            # Hide Tomcat version information
            proxy_hide_header Server;
            proxy_hide_header X-Powered-By;

            # Ensure security headers are applied to proxied responses
            add_header X-Frame-Options "DENY" always;
            add_header X-Content-Type-Options "nosniff" always;
            add_header X-XSS-Protection "1; mode=block" always;
        }
    }

    server {
        listen 443 ssl;
        server_name <www.rawdnsname>;

        ssl_certificate     /etc/nginx/ssl/<fullchainfile>;
        ssl_certificate_key /etc/nginx/ssl/<privatekeyfile>;

        return 301 https://<rawdnsname>$request_uri;
    }

    server {
        listen 80;
        server_name <rawdnsname> <www.rawdnsname>;

        return 301 https://<rawdnsname>$request_uri;
    }
}
